server {
  listen 80;
  listen 443 ssl;
  server_name localhost;

#   root /usr/share/nginx/html;
#   index index.html index.htm;

  ssl on;
  ssl_certificate /etc/nginx/ssl/nginx.crt;
  ssl_certificate_key /etc/nginx/ssl/nginx.key;

  ssl_session_timeout 5m;

  ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
  ssl_prefer_server_ciphers on;

  root /dist;

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to index.html
    try_files $uri $uri/ /index.html;
  }

#   location / {
#         try_files $uri $uri/ =404;
#   }
}


# server {
#     listen       80;

#     # Make site accessible from http://localhost/
#     # server_name _;
#     server_name $hostname
    
#     listen 443 ssl;

#     ssl_certificate ssl/nginx.crt;
#     ssl_certificate_key ssl/nginx.key;


#     #force https
#     return 301 https://$server_name$request_uri;
#     #charset koi8-r;
#     #access_log  /var/log/nginx/host.access.log  main;

#     #error_page  404              /404.html;

#     # redirect server error pages to the static page /50x.html
#     #
#     error_page   500 502 503 504  /50x.html;
#     location = /50x.html {
#         root   /usr/share/nginx/html;
#     }


#     root /app;
    
#     location / {
#         # First attempt to serve request as file, then
#         # as directory, then fall back to index.html
#         try_files $uri $uri/ /index.html;
#     }


#     location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
#       # Some basic cache-control for static files to be sent to the browser
#       expires max;
#       add_header Pragma public;
#       add_header Cache-Control "public, must-revalidate, proxy-revalidate";
#     }
# }